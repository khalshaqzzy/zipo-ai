# Nginx configuration for serving the frontend over HTTPS.

# Server block to handle HTTP traffic and redirect it to HTTPS.
server {
    listen 80;
    server_name zipoai.xyz;

    # Rule for Certbot validation to renew SSL certificates.
    # This allows Let's Encrypt to verify domain ownership.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS with a 301 permanent redirect.
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block to handle HTTPS traffic.
server {
    # Listen on port 443 for incoming SSL/TLS requests.
    listen 443 ssl;
    server_name zipoai.xyz;

    # SSL certificate and private key paths.
    # These are typically generated by Certbot.
    ssl_certificate /etc/letsencrypt/live/zipoai.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zipoai.xyz/privkey.pem;

    # The root directory for serving static files.
    root /usr/share/nginx/html;
    # The default file to serve.
    index index.html;

    # Handle client-side routing for the React application.
    location / {
        try_files $uri /index.html;
    }

    # Proxy for file uploads to the backend.
    location /api/upload {
        client_max_body_size 20M; # Allow up to 20MB for file uploads.
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the protocol (https).
    }

    # Proxy for all other API requests to the backend.
    location /api {
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the protocol (https).
    }

    # Proxy for WebSocket connections used by Socket.IO.
    location /socket.io {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        # Required headers for WebSocket handshake.
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}
