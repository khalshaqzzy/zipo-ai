import mongoose, { Document, Schema } from 'mongoose';

/**
 * Represents a file uploaded by a user.
 * Each file is associated with a user and contains metadata about the upload.
 */


export interface IFile extends Document {
  /** The unique filename generated by multer for storage. */
  filename: string;
  /** The original filename as it was on the user's machine. */
  originalFilename: string;
  /** The absolute path to the stored file on the server. */
  path: string;
  /** The MIME type of the file (e.g., 'application/pdf'). */
  mimetype: string;
  /** The size of the file in bytes. */
  size: number;
  /** The ID of the user who uploaded the file. */
  userId: mongoose.Schema.Types.ObjectId;
}

const FileSchema: Schema = new Schema({
  /** The unique filename for the file on the server's filesystem. */
  filename: { type: String, required: true },
  /** The original name of the file from the user's computer. */
  originalFilename: { type: String, required: true },
  /** The server path where the file is stored. */
  path: { type: String, required: true },
  /** The MIME type of the uploaded file. */
  mimetype: { type: String, required: true },
  /** The file size in bytes. */
  size: { type: Number, required: true },
  /** Reference to the User who owns this file. */
  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
}, { timestamps: true });

export const File = mongoose.model<IFile>('File', FileSchema);
